syntax = "proto3";
package helloworld;

service Greeter {
    rpc SayHello (HelloRequest) returns (HelloReply);
}

message HelloRequest {
   string name = 1;
}

message HelloReply {
    string message = 1;
}

service RouteGuide {
  rpc ListFeatures(Rectangle) returns (stream Feature) {}
}

service PolarsService {
  rpc SendDataframe(FilenameRequest) returns (stream DataframeBytes) {}
}

message DataframeBytes {
  bytes data = 1;
}

message FilenameRequest {
  string filename = 1;
}

service OperatorService {
  rpc OutputCsv(OutputCsvOperatorRequest) returns (stream OperatorCsvFile) {}
}

message OutputCsvOperatorRequest {
  int32 group_id = 1;
}
message OperatorCsvFile {
  oneof value {
    string file_name = 1;
    bytes data = 2;
  }
}

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
message Point {
  int32 latitude = 1;
  int32 longitude = 2;
}

// A latitude-longitude rectangle, represented as two diagonally opposite
// points "lo" and "hi".
message Rectangle {
  // One corner of the rectangle.
  Point lo = 1;

  // The other corner of the rectangle.
  Point hi = 2;
}

// A feature names something at a given point.
//
// If a feature could not be named, the name is empty.
message Feature {
  // The name of the feature.
  string name = 1;

  // The point where the feature is detected.
  Point location = 2;
}